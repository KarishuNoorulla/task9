name: GCP Infrastructure Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  CLUSTER_NAME: task9-gke-cluster
  RUNNER_VM_NAME: github-runner-1-Noorullas

jobs:
  create-runner:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Create Runner VM
      run: |
        gcloud compute instances create ${{ env.RUNNER_VM_NAME }} \
          --zone=${{ env.REGION }}-a \
          --machine-type=e2-medium \
          --image-family=ubuntu-2204-lts \
          --image-project=ubuntu-os-cloud \
          --boot-disk-size=20GB \
          --scopes=cloud-platform \
          --metadata-from-file=startup-script=.github/scripts/gcp-runner-setup.sh \
          --no-address

    - name: Wait for VM setup
      run: sleep 120

  deploy-infrastructure:
  needs: create-runner
  runs-on: self-hosted
  timeout-minutes: 20  # Reduced from 30
  steps:
    - name: Terraform Init
      run: terraform init -upgrade -input=false
      working-directory: ./terraform
      timeout-minutes: 3

    - name: Terraform Apply
      run: |
        terraform apply \
          -auto-approve \
          -input=false \
          -var="project_id=${{ env.PROJECT_ID }}" \
          -parallelism=4
      working-directory: ./terraform
      timeout-minutes: 15

  deploy-application:
    needs: deploy-infrastructure
    runs-on: self-hosted
    timeout-minutes: 15
    steps:
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Build and Push Container
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/task9-app:${{ github.sha }} ./app
        docker push gcr.io/${{ env.PROJECT_ID }}/task9-app:${{ github.sha }}

    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
          --region ${{ env.REGION }} \
          --project ${{ env.PROJECT_ID }}
        kubectl apply -f ./app/manifests/
        kubectl rollout status deployment/web-app --timeout=5m