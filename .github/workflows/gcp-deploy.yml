name: GCP Infrastructure Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  CLUSTER_NAME: task9-gke-cluster

jobs:
  create-runner:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Create Runner VM
      run: |
        gcloud compute instances create github-runner-vm \
          --zone=${{ env.REGION }}-a \
          --machine-type=e2-medium \
          --image-family=ubuntu-2204-lts \
          --image-project=ubuntu-os-cloud \
          --boot-disk-size=20GB \
          --scopes=cloud-platform \
          --metadata-from-file=startup-script=.github/scripts/gcp-runner-setup.sh

    - name: Wait for VM setup
      run: sleep 180

  deploy-infrastructure:
    needs: create-runner
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve -var="project_id=${{ env.PROJECT_ID }}"
      working-directory: ./terraform

  deploy-application:
    needs: deploy-infrastructure
    runs-on: self-hosted
    steps:
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Build and Push Container
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/task9-app:${{ github.sha }} ./app
        docker push gcr.io/${{ env.PROJECT_ID }}/task9-app:${{ github.sha }}

    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
          --region ${{ env.REGION }} \
          --project ${{ env.PROJECT_ID }}
        kubectl apply -f ./app/manifests/